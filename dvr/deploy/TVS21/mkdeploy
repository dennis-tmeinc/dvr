#!/bin/sh

if [ $# -lt 1 ]; then
  echo 'Usage mkdeplay <APPID> '
  exit 1
fi

DEPROOT=$PWD
APPROOT=${DEPROOT}/../..
PATH=${APPROOT}/deploy/util:${PATH}

if [ -f ${APPROOT}/release ] ; then
RELEASE=`cat ${APPROOT}/release`
else
RELEASE=`date +%y.%m%d.%H`
fi

OUTPUTDIR=${DEPROOT}/${RELEASE}

CGIFILES='
	httpd/cfgdown/cfgdown.cgi
	httpd/cfgdown/cfgreport
	httpd/cfgdown/dvrstatus.cgi
	httpd/eagle_setup/cfgupload
	httpd/eagle_setup/firmwareupd 
	httpd/eagle_setup/login 
	httpd/eagle_setup/mcufwupd 
	httpd/eagle_setup/mfid 
	httpd/eagle_setup/pagevalue 
	httpd/eagle_setup/getjpeg.cgi 
	httpd/getsetup/applysetup 
	httpd/getsetup/getsetup 
	httpd/getsetup/tzoption 
'

DVRFILES='
	dvrsvr/dvrsvr 
	eaglesvr/eaglesvr 
	dvrtime/dvrtime 
	eaglehost/eaglehost 
	glog/glog 
	ioprocess/ioprocess 
	ioprocess/iowait 
	ioprocess/devicepower  
	ioprocess/panelled  
	ioprocess/buzzer  
	tdev/tdevd 
	tdev/tdevmount 
	usbgenkey/usbcheck 
	tmeft/tmefile 
	volumeid/md5check 
	volumeid/volumeid 
	cfg/cfg 
	dhcp/udhcpc 
	httpd/eaglehttpd/eaglehttpd
	ssl/programs/ssl/ssl_server
'

appid=$1
special=""
special=$2

if [ ${appid} = "clean" ]; then

#clear utilities
    rm -f cfgpc mksfx sfx
 
# clean host www files
    cd ${DEPROOT}/host/dvr/www
    rm -f -v eaglehttpd

# clean cgi files
	echo Clean cgi files.
    cd ${DEPROOT}/host/dvr/www/cgi
	for cfile in $CGIFILES ; do
		BASE=`basename ${cfile}`
		rm -v ${BASE}
	done
    
# clean dvr files
	echo Clean dvr files.
    cd ${DEPROOT}/host/dvr
	for cfile in $DVRFILES ; do
		BASE=`basename ${cfile}`
		rm -v ${BASE}
	done
	    
# clean host firmware file
    rm -f firmwareid
    
    cd ${DEPROOT}/host/ID
    rm -f BOARDNUM APPID BOARDID

    exit 0
fi

www_depfile=${DEPROOT}/www_depfile

if [ $appid = "clean" ]; then
    if [ -f ${www_depfile} ]; then
        rm ${www_depfile}
    fi
    exit 0
fi

if [ -d ${OUTPUTDIR} ] ; then
    rm -r ${OUTPUTDIR}
fi

mkdir ${OUTPUTDIR}    

slvfirmwareid=TVS21.1.0.${RELEASE}

if [ ${special} = "cycle" ]; then
  firmwareid=${appid}.1.cycle.${RELEASE}
  echo "Firmware ID: " $firmwareid
else
  firmwareid=${appid}.1.0.${RELEASE}
  echo "Firmware ID: " $firmwareid
fi

#copy utilities
cd ${DEPROOT}
cp -v ${APPROOT}/cfg/cfgpc .
cp -v ${APPROOT}/sfx/mksfx .
cp -v ${APPROOT}/sfx/sfx .

# modify default settings

${DEPROOT}/cfgpc -f${DEPROOT}/host/dvr/defconf set glog tab102b_enable 0

${STRIP} sfx

# making host board deploy firmware

if [ ! -d ${DEPROOT}/host/ID ] ; then
  mkdir ${DEPROOT}/host/ID
fi

cd ${DEPROOT}/host/ID
echo 1 > BOARDNUM
echo ${appid} > APPID
echo 1 > BOARDID

echo "Build http files"
cd ${DEPROOT}/host/dvr/www

# dvr files
echo Copy dvr host files
cd ${DEPROOT}/host/dvr
for cfile in $DVRFILES ; do
	cp -v ${APPROOT}/${cfile} ./
	BASE=`basename ${cfile}`
	${STRIP} ${BASE}
done

# cgi files
echo "Copy cgi files"
cd ${DEPROOT}/host/dvr/www/cgi
for cfile in $CGIFILES ; do
	cp -v ${APPROOT}/${cfile} ./
	BASE=`basename ${cfile}`
	${STRIP} ${BASE}
done

echo Building Host dep firmware
cd ${DEPROOT}/host
echo ${firmwareid} > dvr/firmwareid
${DEPROOT}/mksfx ${DEPROOT}/sfx sfxlist.dep ${OUTPUTDIR}/HOST_DEP_${firmwareid}.FW
chmod a+x ${OUTPUTDIR}/HOST_DEP_${firmwareid}.FW

echo Building Host update firmware
${DEPROOT}/mksfx ${DEPROOT}/sfx sfxlist.upd ${OUTPUTDIR}/HOST_${firmwareid}.FW
chmod a+x ${OUTPUTDIR}/HOST_${firmwareid}.FW

echo Finish!

